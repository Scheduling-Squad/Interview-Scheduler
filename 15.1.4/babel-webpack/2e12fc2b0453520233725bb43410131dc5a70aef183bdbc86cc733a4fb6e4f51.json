{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/table\";\nfunction InterviewTableComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \"No.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r8.id);\n  }\n}\nfunction InterviewTableComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r9.candidateName);\n  }\n}\nfunction InterviewTableComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \"Weight\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r10.interviewTime);\n  }\n}\nfunction InterviewTableComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 11);\n  }\n}\nfunction InterviewTableComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 12);\n  }\n}\nconst ELEMENT_DATA = [{\n  id: 1,\n  candidateName: 'shankar',\n  interviewTime: Date.now().toString()\n}, {\n  id: 3,\n  candidateName: 'selva',\n  interviewTime: Date.now().toString()\n}, {\n  id: 4,\n  candidateName: 'peter',\n  interviewTime: Date.now().toString()\n}];\nexport class InterviewTableComponent {\n  constructor() {\n    this.displayedColumns = ['id', 'candidateName', 'interviewTime'];\n    this.dataSource = ELEMENT_DATA;\n  }\n  ngOnInit() {}\n}\nInterviewTableComponent.ɵfac = function InterviewTableComponent_Factory(t) {\n  return new (t || InterviewTableComponent)();\n};\nInterviewTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InterviewTableComponent,\n  selectors: [[\"app-interview-table\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"p-10\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"candidateName\"], [\"matColumnDef\", \"interviewTime\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function InterviewTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n      i0.ɵɵelementContainerStart(2, 2);\n      i0.ɵɵtemplate(3, InterviewTableComponent_th_3_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(4, InterviewTableComponent_td_4_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(5, 5);\n      i0.ɵɵtemplate(6, InterviewTableComponent_th_6_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(7, InterviewTableComponent_td_7_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(8, 6);\n      i0.ɵɵtemplate(9, InterviewTableComponent_th_9_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(10, InterviewTableComponent_td_10_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(11, InterviewTableComponent_tr_11_Template, 1, 0, \"tr\", 7);\n      i0.ɵɵtemplate(12, InterviewTableComponent_tr_12_Template, 1, 0, \"tr\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14, \"interview-table works!\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i1.MatTable, i1.MatHeaderCellDef, i1.MatHeaderRowDef, i1.MatColumnDef, i1.MatCellDef, i1.MatRowDef, i1.MatHeaderCell, i1.MatCell, i1.MatHeaderRow, i1.MatRow],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAOMA,6BAAsC;IAAAA,mBAAG;IAAAA,iBAAK;;;;;IAC9CA,8BAAuC;IAAAA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,mCAAgB;;;;;IAKvDA,6BAAsC;IAAAA,oBAAI;IAAAA,iBAAK;;;;;IAC/CA,8BAAuC;IAAAA,YAA2B;IAAAA,iBAAK;;;;IAAhCA,eAA2B;IAA3BA,8CAA2B;;;;;IAKlEA,6BAAsC;IAAAA,sBAAM;IAAAA,iBAAK;;;;;IACjDA,8BAAuC;IAAAA,YAA2B;IAAAA,iBAAK;;;;IAAhCA,eAA2B;IAA3BA,+CAA2B;;;;;IAGpEA,yBAA4D;;;;;IAC5DA,yBAAiE;;;AChBrE,MAAMC,YAAY,GAAqB,CACrC;EAAEC,EAAE,EAAE,CAAC;EAAEC,aAAa,EAAE,SAAS;EAAEC,aAAa,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ;AAAE,CAAE,EACzE;EAAEL,EAAE,EAAE,CAAC;EAAEC,aAAa,EAAE,OAAO;EAAEC,aAAa,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ;AAAE,CAAE,EACvE;EAAEL,EAAE,EAAE,CAAC;EAAEC,aAAa,EAAE,OAAO;EAAEC,aAAa,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ;AAAE,CAAE,CACxE;AAOD,OAAM,MAAOC,uBAAuB;EAClCC;IAGA,qBAAgB,GAAa,CAAC,IAAI,EAAE,eAAe,EAAE,eAAe,CAAC;IACrE,eAAU,GAAGR,YAAY;EAJV;EAEfS,QAAQ,IAAI;;AAHDF,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDnBpCf,8BAAkB;MAMdA,gCAAgC;MAC9BA,sEAA8C;MAC9CA,sEAA4D;MAC9DA,0BAAe;MAGfA,gCAA2C;MACzCA,sEAA+C;MAC/CA,sEAAuE;MACzEA,0BAAe;MAGfA,gCAA2C;MACzCA,sEAAiD;MACjDA,wEAAuE;MACzEA,0BAAe;MAEfA,wEAA4D;MAC5DA,wEAAiE;MACnEA,iBAAQ;MAEVA,0BAAG;MAAAA,uCAAsB;MAAAA,iBAAI;;;MA1BVA,eAAyB;MAAzBA,2CAAyB;MAsBpBA,gBAAiC;MAAjCA,sDAAiC;MACpBA,eAAyB;MAAzBA,uDAAyB","names":["i0","ELEMENT_DATA","id","candidateName","interviewTime","Date","now","toString","InterviewTableComponent","constructor","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Angular\\interview\\src\\app\\pages\\interview-table\\interview-table.component.html","F:\\Angular\\interview\\src\\app\\pages\\interview-table\\interview-table.component.ts"],"sourcesContent":["<div class=\"p-10\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"candidateName\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.candidateName }}</td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"interviewTime\">\n      <th mat-header-cell *matHeaderCellDef>Weight</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.interviewTime }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n<p>interview-table works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatTable } from '@angular/material/table';\nexport interface InterviewTable {\n  id: number;\n  candidateName: string;\n  interviewTime: string;\n}\nconst ELEMENT_DATA: InterviewTable[] = [\n  { id: 1, candidateName: 'shankar', interviewTime: Date.now().toString() },\n  { id: 3, candidateName: 'selva', interviewTime: Date.now().toString() },\n  { id: 4, candidateName: 'peter', interviewTime: Date.now().toString() },\n];\n\n@Component({\n  selector: 'app-interview-table',\n  templateUrl: './interview-table.component.html',\n  styleUrls: ['./interview-table.component.css'],\n})\nexport class InterviewTableComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n  displayedColumns: string[] = ['id', 'candidateName', 'interviewTime'];\n  dataSource = ELEMENT_DATA;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}