{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/candidate-service.service\";\nimport * as i2 from \"@angular/material/table\";\nimport * as i3 from \"@angular/material/menu\";\nimport * as i4 from \"@angular/material/icon\";\nfunction InterviewTableComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"No.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r10.id);\n  }\n}\nfunction InterviewTableComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r11.candidateName);\n  }\n}\nfunction InterviewTableComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Time\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r12.interviewTime);\n  }\n}\nfunction InterviewTableComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InterviewTableComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11)(1, \"button\", 12)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"more_vert\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-menu\", null, 13)(6, \"button\", 14)(7, \"span\");\n    i0.ɵɵtext(8, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 14)(10, \"span\");\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r14 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r14);\n  }\n}\nfunction InterviewTableComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\nfunction InterviewTableComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\nconst ELEMENT_DATA = [{\n  id: 1,\n  candidateName: 'shankar',\n  interviewTime: Date.now().toString()\n}, {\n  id: 3,\n  candidateName: 'selva',\n  interviewTime: Date.now().toString()\n}, {\n  id: 4,\n  candidateName: 'peter',\n  interviewTime: Date.now().toString()\n}];\nexport class InterviewTableComponent {\n  constructor(candidateService) {\n    this.candidateService = candidateService;\n    this.interviews = [];\n    this.displayedColumns = ['id', 'candidateName', 'interviewTime', 'actions'];\n  }\n  ngOnInit() {\n    this.interviews = this.candidateService.getInterviewTableData();\n  }\n}\nInterviewTableComponent.ɵfac = function InterviewTableComponent_Factory(t) {\n  return new (t || InterviewTableComponent)(i0.ɵɵdirectiveInject(i1.CandidateService));\n};\nInterviewTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InterviewTableComponent,\n  selectors: [[\"app-interview-table\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"flex\", \"p-10\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"candidateName\"], [\"matColumnDef\", \"interviewTime\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with a menu\", 3, \"matMenuTriggerFor\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function InterviewTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n      i0.ɵɵelementContainerStart(2, 2);\n      i0.ɵɵtemplate(3, InterviewTableComponent_th_3_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(4, InterviewTableComponent_td_4_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(5, 5);\n      i0.ɵɵtemplate(6, InterviewTableComponent_th_6_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(7, InterviewTableComponent_td_7_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(8, 6);\n      i0.ɵɵtemplate(9, InterviewTableComponent_th_9_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(10, InterviewTableComponent_td_10_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 7);\n      i0.ɵɵtemplate(12, InterviewTableComponent_th_12_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(13, InterviewTableComponent_td_13_Template, 12, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(14, InterviewTableComponent_tr_14_Template, 1, 0, \"tr\", 8);\n      i0.ɵɵtemplate(15, InterviewTableComponent_tr_15_Template, 1, 0, \"tr\", 9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.interviews);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow, i3.MatMenu, i3.MatMenuItem, i3.MatMenuTrigger, i4.MatIcon],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAOMA,8BAAsC;IAAAA,mBAAG;IAAAA,iBAAK;;;;;IAC9CA,8BAAuC;IAAAA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,oCAAgB;;;;;IAKvDA,8BAAsC;IAAAA,oBAAI;IAAAA,iBAAK;;;;;IAC/CA,8BAAuC;IAAAA,YAA2B;IAAAA,iBAAK;;;;IAAhCA,eAA2B;IAA3BA,+CAA2B;;;;;IAKlEA,8BAAsC;IAAAA,oBAAI;IAAAA,iBAAK;;;;;IAC/CA,8BAAuC;IAAAA,YAA2B;IAAAA,iBAAK;;;;IAAhCA,eAA2B;IAA3BA,+CAA2B;;;;;IAIlEA,8BAAsC;IAAAA,uBAAO;IAAAA,iBAAK;;;;;IAClDA,8BAAuC;IAMzBA,yBAAS;IAAAA,iBAAW;IAEhCA,0CAA0B;IAEhBA,sBAAM;IAAAA,iBAAO;IAErBA,kCAAsB;IACdA,uBAAM;IAAAA,iBAAO;;;;IAVrBA,eAA0B;IAA1BA,wCAA0B;;;;;IAgBhCA,yBAA4D;;;;;IAC5DA,yBAAiE;;;ACtCrE,MAAMC,YAAY,GAAqB,CACrC;EAAEC,EAAE,EAAE,CAAC;EAAEC,aAAa,EAAE,SAAS;EAAEC,aAAa,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ;AAAE,CAAE,EACzE;EAAEL,EAAE,EAAE,CAAC;EAAEC,aAAa,EAAE,OAAO;EAAEC,aAAa,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ;AAAE,CAAE,EACvE;EAAEL,EAAE,EAAE,CAAC;EAAEC,aAAa,EAAE,OAAO;EAAEC,aAAa,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ;AAAE,CAAE,CACxE;AAOD,OAAM,MAAOC,uBAAuB;EAClCC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IACpC,eAAU,GAAqB,EAAE;IAKjC,qBAAgB,GAAa,CAC3B,IAAI,EACJ,eAAe,EACf,eAAe,EACf,SAAS,CACV;EAXwD;EAGzDC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,gBAAgB,CAACG,qBAAqB,EAAE;EACjE;;AANWL,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDlBpClB,8BAAuB;MAMnBA,gCAAgC;MAC9BA,sEAA8C;MAC9CA,sEAA4D;MAC9DA,0BAAe;MAGfA,gCAA2C;MACzCA,sEAA+C;MAC/CA,sEAAuE;MACzEA,0BAAe;MAGfA,gCAA2C;MACzCA,sEAA+C;MAC/CA,wEAAuE;MACzEA,0BAAe;MAEfA,iCAAqC;MACnCA,wEAAkD;MAClDA,yEAgBK;MACPA,0BAAe;MAEfA,wEAA4D;MAC5DA,wEAAiE;MACnEA,iBAAQ;;;MA7CSA,eAAyB;MAAzBA,2CAAyB;MA2CpBA,gBAAiC;MAAjCA,sDAAiC;MACpBA,eAAyB;MAAzBA,uDAAyB","names":["i0","ELEMENT_DATA","id","candidateName","interviewTime","Date","now","toString","InterviewTableComponent","constructor","candidateService","ngOnInit","interviews","getInterviewTableData","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Angular\\interview\\src\\app\\pages\\interview-table\\interview-table.component.html","F:\\Angular\\interview\\src\\app\\pages\\interview-table\\interview-table.component.ts"],"sourcesContent":["<div class=\"flex p-10\">\n  <table mat-table [dataSource]=\"interviews\" class=\"mat-elevation-z8\">\n    <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"candidateName\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.candidateName }}</td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"interviewTime\">\n      <th mat-header-cell *matHeaderCellDef>Time</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.interviewTime }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>actions</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-icon-button\n          [matMenuTriggerFor]=\"menu\"\n          aria-label=\"Example icon-button with a menu\"\n        >\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item>\n            <span>Update</span>\n          </button>\n          <button mat-menu-item>\n            <span>Delete</span>\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { CandidateService } from './../../services/candidate-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatTable } from '@angular/material/table';\nimport { InterviewTable } from 'src/app/interfaces/interviewTable';\nimport { MatMenu } from '@angular/material/menu';\n\nconst ELEMENT_DATA: InterviewTable[] = [\n  { id: 1, candidateName: 'shankar', interviewTime: Date.now().toString() },\n  { id: 3, candidateName: 'selva', interviewTime: Date.now().toString() },\n  { id: 4, candidateName: 'peter', interviewTime: Date.now().toString() },\n];\n\n@Component({\n  selector: 'app-interview-table',\n  templateUrl: './interview-table.component.html',\n  styleUrls: ['./interview-table.component.css'],\n})\nexport class InterviewTableComponent implements OnInit {\n  constructor(private candidateService: CandidateService) {}\n  interviews: InterviewTable[] = [];\n\n  ngOnInit(): void {\n    this.interviews = this.candidateService.getInterviewTableData();\n  }\n  displayedColumns: string[] = [\n    'id',\n    'candidateName',\n    'interviewTime',\n    'actions',\n  ];\n  //dataSource = ELEMENT_DATA;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}